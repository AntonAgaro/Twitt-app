{"version":3,"sources":["components/Header/Header.js","components/Search/Search.js","components/PostsList/PostListItem/PostListItem.js","components/PostsList/PostsList.js","components/AddPost/AddPost.js","hoc/App/App.js","index.js"],"names":["Header","props","likedPosts","posts","filter","item","isLiked","length","className","Search","takeSearchRequest","event","searchRequest","target","value","setState","updateSearchRequest","state","buttons","name","label","this","map","button","classes","push","join","onClick","onFilterSelect","type","placeholder","onChange","Component","PostListItem","mainClass","secondClass","id","changeClasses","isImportant","makeLiked","text","makeImportant","onDelete","PostsList","post","index","AddPost","takeNewPostText","newPostText","addNewPostOnPage","addNewPost","App","postsWithoutDeleted","deletedItem","findIndex","splice","forEach","body","newPost","importantPost","likedPost","newSearchRequest","toLowerCase","indexOf","visiblePosts","filterPosts","showVisiblePosts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e4a46287.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.scss';\n\nconst Header = props => {\n    const likedPosts = props.posts.filter(item => item.isLiked).length;\n    return (\n        <div className=\"Header\">\n            <h3 className=\"Header__title\">Twit-app</h3>\n            <p className=\"Header__count\">{props.posts.length} posts, liked {likedPosts}</p>\n        </div>\n    )\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport './Search.scss';\n\nexport default class Search extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            searchRequest: '',\n        }\n        this.buttons = [\n            {name: 'all', label: 'all'},\n            {name: 'isLiked', label: 'liked'},\n        ]\n    }\n\n    takeSearchRequest = (event) => {\n        const searchRequest = event.target.value;\n        this.setState({\n                searchRequest: searchRequest\n            })\n            \n            this.props.updateSearchRequest(searchRequest);\n        }\n    \n    render() {\n        const buttons = this.buttons.map(button => {\n            const classes = ['Search__button'];\n            const active = this.props.filter === button.name;\n            if (active) {\n                classes.push('Search__button--active')\n            }\n            return <button \n                    key={button.name} \n                    className={classes.join(' ')}\n                    onClick={() => this.props.onFilterSelect(button.name)}\n                >\n                {button.label}\n                </button>\n        });\n        return (\n            <div className=\"Search\">\n                <input \n                    className=\"Search__input\" \n                    type=\"text\" \n                    placeholder=\"Search...\"\n                    onChange={this.takeSearchRequest}\n                />\n                {buttons}\n            </div>\n        )\n    }\n}\n\n","import React, { Component } from 'react';\nimport './PostListItem.scss';\n\nexport default class PostListItem extends Component  {\n    changeClasses(mainClass, secondClass, event) {\n        const classes = [mainClass];\n        if (event) {\n            classes.push(secondClass);\n        }\n        return classes.join(' ');\n    }\n\n\n    render() {\n    \n        return (\n            <li className=\"PostListItem\" id={this.props.id}>\n                <p \n                    className={this.changeClasses('PostListItem__text', 'important', this.props.isImportant)} \n                    onClick={() => this.props.makeLiked(this.props.id)}\n                >\n                {this.props.text}\n                </p>\n                <div className=\"PostListItem__icons\"> \n                    <i className={this.changeClasses('far fa-star', 'important', this.props.isImportant)} \n                    onClick={() => this.props.makeImportant(this.props.id)}/>\n                    <i className=\"fas fa-trash-alt\" onClick={() => this.props.onDelete(this.props.id)}/>\n                    <i className={this.changeClasses('fas fa-heart', 'liked', this.props.isLiked)} \n                    onClick={() => this.props.makeLiked(this.props.id)}/>\n                </div>\n            </li>\n        )\n    }\n}\n\n","import React from 'react';\nimport './PostsList.scss';\nimport PostListItem from './PostListItem/PostListItem';\n\nconst PostsList = props => {\n    return (\n        <ul className=\"PostsList\">\n            {props.posts.map((post, index) => {\n                return (\n                    <PostListItem \n                        key={index} \n                        text={post.text} \n                        id={post.id} \n                        isImportant={post.isImportant}\n                        isLiked={post.isLiked}\n                        onDelete={props.onDelete}\n                        makeImportant={props.makeImportant}\n                        makeLiked={props.makeLiked}\n                    />\n                )\n            })}\n        </ul>\n    )\n}\n\nexport default PostsList;","import React, { Component } from 'react';\nimport './AddPost.scss';\n\nexport default class AddPost extends Component  {\n    constructor(props) {\n        super(props);\n        this.state = {\n            newPostText: ''\n        }\n    }\n\n    takeNewPostText = (event) => {\n        const text = event.target.value;\n        this.setState({\n            newPostText: text\n        });\n    }\n\n    addNewPostOnPage = () => {\n        this.props.addNewPost(this.state.newPostText);\n        this.setState({\n            newPostText: ''\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"AddPost\">\n                <input \n                    className=\"AddPost__input\" \n                    type=\"text\" \n                    placeholder=\"What to post...\" \n                    onChange={this.takeNewPostText}\n                    value={this.state.newPostText}\n                />\n                <button className=\"AddPost__button\" onClick={this.addNewPostOnPage}>Post</button>\n            </div>\n        )\n    }\n}\n\n","import React, { Component } from 'react';\nimport './App.scss';\nimport Header from '../../components/Header/Header';\nimport Search from '../../components/Search/Search';\nimport PostsList from '../../components/PostsList/PostsList';\nimport AddPost from '../../components/AddPost/AddPost';\n\nclass App extends Component {\n    state = {\n        posts: [\n            {text: \"If u wanna change your life\", id: 0, isImportant: false, isLiked: false},\n            {text: \"If u wanna change your body\", id: 1, isImportant: false, isLiked: false},\n            {text: \"do it everywhere\", id: 2, isImportant: false, isLiked: false},\n            {text: \"Absolutly\", id: 3, isImportant: false, isLiked: false}\n        ],\n        searchRequest: '',\n        filter: 'all'\n    }\n\n    onDelete = (id) => {\n        const postsWithoutDeleted = this.state.posts;\n        const deletedItem = postsWithoutDeleted.findIndex(item => item.id === id);\n        postsWithoutDeleted.splice(deletedItem, 1);\n        postsWithoutDeleted.forEach((item, index) => item.id = index);\n        this.setState({\n            posts: postsWithoutDeleted\n        });\n    }\n\n    addNewPost = (body) => {\n        const posts = this.state.posts;\n        const newPost = {\n            text: body,\n            id: 0,\n            isImportant: false, \n            isLiked: false\n        }\n        posts.push(newPost);\n        posts.forEach((item, index) => item.id = index);\n        this.setState({\n            posts: posts\n        });\n    }\n\n    makeImportant = (id) => {\n        const posts = this.state.posts;\n        const importantPost = posts.findIndex(post => post.id === id);\n        posts[importantPost].isImportant = !posts[importantPost].isImportant;\n        this.setState({\n            posts: posts\n        })\n    }\n\n    makeLiked = (id) => {\n        const posts = this.state.posts;\n        const likedPost = posts.findIndex(post => post.id === id);\n        posts[likedPost].isLiked = !posts[likedPost].isLiked;\n        this.setState({\n            posts: posts\n        })\n    }\n\n    updateSearchRequest = (newSearchRequest) => {\n        this.setState({\n            searchRequest: newSearchRequest\n        })\n    }\n\n    showVisiblePosts() {\n        if (this.state.searchRequest === '') {\n            return this.state.posts;\n        } else {\n            // const regExp = new RegExp(this.state.searchRequest, 'gi')\n            // return this.state.posts.filter(post => regExp.test(post.text));\n            return this.state.posts.filter(item => item.text.toLowerCase().indexOf(this.state.searchRequest.toLowerCase()) > -1);\n        }\n    }\n\n    filterPosts(posts, filter) {\n        if (filter === 'isLiked') {\n            return posts.filter(post => post.isLiked);\n        } else {\n            return posts;\n        }\n    }\n\n    onFilterSelect = (filter) => {\n        this.setState({filter});\n    }\n\n    render() {\n        const filter = this.state.filter;\n        const visiblePosts = this.filterPosts(this.showVisiblePosts(this.state.posts), filter);\n\n        return (\n            <div className=\"App\">\n                <Header posts={this.state.posts}/>\n                <Search \n                    updateSearchRequest={this.updateSearchRequest}\n                    filter={filter}\n                    onFilterSelect={this.onFilterSelect}\n                />\n                <PostsList \n                    posts={visiblePosts} \n                    onDelete={this.onDelete} \n                    makeImportant={this.makeImportant} \n                    makeLiked={this.makeLiked}\n                />\n                <AddPost addNewPost={this.addNewPost}/>\n            </div>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './hoc/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}